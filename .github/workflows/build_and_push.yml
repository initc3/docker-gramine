name: ci

on:
  push:
    branches: [ main, dev ]

  workflow_dispatch:

defaults:
  runs-on: ubuntu-latest
  env:
    REGISTRY: ghcr.io
    IMAGE_NAME: initc3/gramine
  steps:
    -
      name: Checkout
      uses: actions/checkout@v2
    -
      name: Set Short SHA
      id: vars
      run: echo "::set-output name=short_sha::$(git rev-parse --short HEAD)"
    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    -
      name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

jobs:
  legacy:
    steps:
      -
        name: Build & push docker image for gramine with legacy sgx driver
        uses: docker/build-push-action@v4
        with:
          platforms: linux/amd64
          context: .
          file: oot.Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          build-args: branch=${{ github.ref_name }}
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:legacy-${{ github.ref_name }},
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:legacy-${{ steps.vars.outputs.short_sha }},
          cache-from: type=gha
          cache-to: type=gha,mode=max
  epid:
    steps:
      -
        name: Build & push docker image for gramine with in-kernel sgx driver for epid
        uses: docker/build-push-action@v4
        with:
          platforms: linux/amd64
          context: .
          file: inkernel.Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          build-args: |
            branch=${{ github.base_ref }}
            dcap=disabled
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:epid-${{ github.ref_name }},
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:epid-${{ steps.vars.outputs.short_sha }},
          cache-from: type=gha
          cache-to: type=gha,mode=max
  dcap:
    steps:
      -
        name: Build & push docker image for gramine with in-kernel sgx driver for epid
        uses: docker/build-push-action@v4
        with:
          platforms: linux/amd64
          context: .
          file: inkernel.Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          build-args: |
            branch=${{ github.base_ref }}
            dcap=enabled
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:dcap-${{ github.ref_name }},
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:dcap-${{ steps.vars.outputs.short_sha }},
          cache-from: type=gha
          cache-to: type=gha,mode=max
